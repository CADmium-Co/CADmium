// This file is generated by the gen-types binary, do not edit
import { Direction, IDType, MessageResult, Mode, Plane, PlaneDescription, StepHash } from "cadmium"
import { sendWasmMessage } from "./projectUtils"

export interface ProjectRename { new_name: string;  }
export function projectRename(new_name: string): MessageResult {
    const message: Message = { type: "ProjectRename", new_name };
    return sendWasmMessage(message);
}

export interface WorkbenchRename { workbench_id: StepHash; new_name: string;  }
export function workbenchRename(workbench_id: StepHash, new_name: string): MessageResult {
    const message: Message = { type: "WorkbenchRename", workbench_id, new_name };
    return sendWasmMessage(message);
}

export interface WorkbenchPointAdd { workbench_id: StepHash; x: number; y: number; z: number;  }
export function workbenchPointAdd(workbench_id: StepHash, x: number, y: number, z: number): MessageResult {
    const message: Message = { type: "WorkbenchPointAdd", workbench_id, x, y, z };
    return sendWasmMessage(message);
}

export interface WorkbenchPlaneAdd { workbench_id: StepHash; plane: Plane; width: number; height: number;  }
export function workbenchPlaneAdd(workbench_id: StepHash, plane: Plane, width: number, height: number): MessageResult {
    const message: Message = { type: "WorkbenchPlaneAdd", workbench_id, plane, width, height };
    return sendWasmMessage(message);
}

export interface WorkbenchSketchAdd { workbench_id: StepHash; plane_description: PlaneDescription;  }
export function workbenchSketchAdd(workbench_id: StepHash, plane_description: PlaneDescription): MessageResult {
    const message: Message = { type: "WorkbenchSketchAdd", workbench_id, plane_description };
    return sendWasmMessage(message);
}

export interface WorkbenchSketchSetPlane { workbench_id: StepHash; sketch_id: IDType; plane_description: PlaneDescription;  }
export function workbenchSketchSetPlane(workbench_id: StepHash, sketch_id: IDType, plane_description: PlaneDescription): MessageResult {
    const message: Message = { type: "WorkbenchSketchSetPlane", workbench_id, sketch_id, plane_description };
    return sendWasmMessage(message);
}

export interface WorkbenchPointUpdate { workbench_id: StepHash; point_id: StepHash; x: number; y: number; z: number;  }
export function workbenchPointUpdate(workbench_id: StepHash, point_id: StepHash, x: number, y: number, z: number): MessageResult {
    const message: Message = { type: "WorkbenchPointUpdate", workbench_id, point_id, x, y, z };
    return sendWasmMessage(message);
}

export interface SketchAddPoint { workbench_id: StepHash; sketch_id: StepHash; x: number; y: number;  }
export function sketchAddPoint(workbench_id: StepHash, sketch_id: StepHash, x: number, y: number): MessageResult {
    const message: Message = { type: "SketchAddPoint", workbench_id, sketch_id, x, y };
    return sendWasmMessage(message);
}

export interface SketchAddArc { workbench_id: StepHash; sketch_id: StepHash; center: StepHash; radius: number; clockwise: boolean; start_angle: number; end_angle: number;  }
export function sketchAddArc(workbench_id: StepHash, sketch_id: StepHash, center: StepHash, radius: number, clockwise: boolean, start_angle: number, end_angle: number): MessageResult {
    const message: Message = { type: "SketchAddArc", workbench_id, sketch_id, center, radius, clockwise, start_angle, end_angle };
    return sendWasmMessage(message);
}

export interface SketchAddCircle { workbench_id: StepHash; sketch_id: StepHash; center: StepHash; radius: number;  }
export function sketchAddCircle(workbench_id: StepHash, sketch_id: StepHash, center: StepHash, radius: number): MessageResult {
    const message: Message = { type: "SketchAddCircle", workbench_id, sketch_id, center, radius };
    return sendWasmMessage(message);
}

export interface SketchAddLine { workbench_id: StepHash; sketch_id: StepHash; start: StepHash; end: StepHash;  }
export function sketchAddLine(workbench_id: StepHash, sketch_id: StepHash, start: StepHash, end: StepHash): MessageResult {
    const message: Message = { type: "SketchAddLine", workbench_id, sketch_id, start, end };
    return sendWasmMessage(message);
}

export interface SketchAddRectangle { workbench_id: StepHash; sketch_id: StepHash; start: IDType; end: IDType;  }
export function sketchAddRectangle(workbench_id: StepHash, sketch_id: StepHash, start: IDType, end: IDType): MessageResult {
    const message: Message = { type: "SketchAddRectangle", workbench_id, sketch_id, start, end };
    return sendWasmMessage(message);
}

export interface SketchDeletePrimitive { workbench_id: StepHash; sketch_id: StepHash; id: IDType;  }
export function sketchDeletePrimitive(workbench_id: StepHash, sketch_id: StepHash, id: IDType): MessageResult {
    const message: Message = { type: "SketchDeletePrimitive", workbench_id, sketch_id, id };
    return sendWasmMessage(message);
}

export interface FeatureExtrusionAdd { workbench_id: StepHash; sketch_id: StepHash; faces: IDType[]; length: number; offset: number; direction: Direction; mode: Mode;  }
export function featureExtrusionAdd(workbench_id: StepHash, sketch_id: StepHash, faces: IDType[], length: number, offset: number, direction: Direction, mode: Mode): MessageResult {
    const message: Message = { type: "FeatureExtrusionAdd", workbench_id, sketch_id, faces, length, offset, direction, mode };
    return sendWasmMessage(message);
}

export interface StepRename { workbench_id: StepHash; step_id: StepHash; new_name: string;  }
export function stepRename(workbench_id: StepHash, step_id: StepHash, new_name: string): MessageResult {
    const message: Message = { type: "StepRename", workbench_id, step_id, new_name };
    return sendWasmMessage(message);
}

export interface StepDelete { workbench_id: StepHash; step_id: IDType;  }
export function stepDelete(workbench_id: StepHash, step_id: IDType): MessageResult {
    const message: Message = { type: "StepDelete", workbench_id, step_id };
    return sendWasmMessage(message);
}
export type Message = { type: "ProjectRename" } & ProjectRename | { type: "WorkbenchRename" } & WorkbenchRename | { type: "WorkbenchPointAdd" } & WorkbenchPointAdd | { type: "WorkbenchPlaneAdd" } & WorkbenchPlaneAdd | { type: "WorkbenchSketchAdd" } & WorkbenchSketchAdd | { type: "WorkbenchSketchSetPlane" } & WorkbenchSketchSetPlane | { type: "WorkbenchPointUpdate" } & WorkbenchPointUpdate | { type: "SketchAddPoint" } & SketchAddPoint | { type: "SketchAddArc" } & SketchAddArc | { type: "SketchAddCircle" } & SketchAddCircle | { type: "SketchAddLine" } & SketchAddLine | { type: "SketchAddRectangle" } & SketchAddRectangle | { type: "SketchDeletePrimitive" } & SketchDeletePrimitive | { type: "FeatureExtrusionAdd" } & FeatureExtrusionAdd | { type: "StepRename" } & StepRename | { type: "StepDelete" } & StepDelete;
